nohup: ignoring input
/home/m.siavashpour/.conda/envs/stan-env/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.1
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"
20:22:56 - cmdstanpy - INFO - Chain [1] start processing
20:22:56 - cmdstanpy - INFO - Chain [2] start processing
20:22:56 - cmdstanpy - INFO - Chain [3] start processing
20:22:56 - cmdstanpy - INFO - Chain [4] start processing
   accuracy     rt         string  ...  category     word_prob  non_word_prob
0         0  0.707         bookie  ...        HF  9.982517e-01       0.001748
1         1  0.769      gandbrake  ...        NW  3.736372e-08       1.000000
2         1  0.526  philosophical  ...        HF  9.968132e-01       0.003187
3         0  0.510       umbeaten  ...        NW  5.537812e-05       0.999945
4         1  0.512      belonging  ...        HF  9.985624e-01       0.001438

[5 rows x 11 columns]
         word_prob                  ... non_word_prob                        
              mean       std count  ...         count       max           min
category                            ...                                      
HF        0.992735  0.051735  2175  ...          2175  0.997363  1.709619e-14
LF        0.987029  0.062231  2818  ...          2818  1.000000  4.915254e-13
NW        0.004638  0.051215  5714  ...          5714  1.000000  1.144295e-03

[3 rows x 10 columns]
                rt                          response                  
              mean       std    max    min      mean       std max min
category                                                              
HF        0.684127  0.269523  2.551  0.295  0.951724  0.214398   1   0
LF        0.810483  0.335684  2.861  0.234  0.822214  0.382400   1   0
NW        0.858051  0.344388  2.974  0.200  0.127931  0.334043   1   0
Chain [1] method = sample (Default)
Chain [1] sample
Chain [1] num_samples = 3500
Chain [1] num_warmup = 3500
Chain [1] save_warmup = 0 (Default)
Chain [1] thin = 1 (Default)
Chain [1] adapt
Chain [1] engaged = 1 (Default)
Chain [1] gamma = 0.050000000000000003 (Default)
Chain [1] delta = 0.80000000000000004 (Default)
Chain [1] kappa = 0.75 (Default)
Chain [1] t0 = 10 (Default)
Chain [1] init_buffer = 75 (Default)
Chain [1] term_buffer = 50 (Default)
Chain [1] window = 25 (Default)
Chain [1] algorithm = hmc (Default)
Chain [1] hmc
Chain [1] engine = nuts (Default)
Chain [1] nuts
Chain [1] max_depth = 10 (Default)
Chain [1] metric = diag_e (Default)
Chain [1] metric_file =  (Default)
Chain [1] stepsize = 1 (Default)
Chain [1] stepsize_jitter = 0 (Default)
Chain [1] num_chains = 1 (Default)
Chain [1] id = 1 (Default)
Chain [1] data
Chain [1] file = /tmp/tmpz_9aujrb/u1ypr43x.json
Chain [1] init = 2 (Default)
Chain [1] random
Chain [1] seed = 88203
Chain [1] output
Chain [1] file = /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_1.csv
Chain [1] diagnostic_file =  (Default)
Chain [1] refresh = 100 (Default)
Chain [1] sig_figs = -1 (Default)
Chain [1] profile_file = profile.csv (Default)
Chain [1] num_threads = 1 (Default)
Chain [1] 
Chain [2] method = sample (Default)
Chain [2] sample
Chain [2] num_samples = 3500
Chain [2] num_warmup = 3500
Chain [2] save_warmup = 0 (Default)
Chain [2] thin = 1 (Default)
Chain [2] adapt
Chain [2] engaged = 1 (Default)
Chain [2] gamma = 0.050000000000000003 (Default)
Chain [2] delta = 0.80000000000000004 (Default)
Chain [2] kappa = 0.75 (Default)
Chain [2] t0 = 10 (Default)
Chain [2] init_buffer = 75 (Default)
Chain [2] term_buffer = 50 (Default)
Chain [2] window = 25 (Default)
Chain [2] algorithm = hmc (Default)
Chain [2] hmc
Chain [2] engine = nuts (Default)
Chain [2] nuts
Chain [2] max_depth = 10 (Default)
Chain [2] metric = diag_e (Default)
Chain [2] metric_file =  (Default)
Chain [2] stepsize = 1 (Default)
Chain [2] stepsize_jitter = 0 (Default)
Chain [2] num_chains = 1 (Default)
Chain [2] id = 2
Chain [2] data
Chain [2] file = /tmp/tmpz_9aujrb/u1ypr43x.json
Chain [2] init = 2 (Default)
Chain [2] random
Chain [2] seed = 88203
Chain [2] output
Chain [2] file = /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_2.csv
Chain [2] diagnostic_file =  (Default)
Chain [2] refresh = 100 (Default)
Chain [2] sig_figs = -1 (Default)
Chain [2] profile_file = profile.csv (Default)
Chain [2] num_threads = 1 (Default)
Chain [2] 
Chain [3] method = sample (Default)
Chain [3] sample
Chain [3] num_samples = 3500
Chain [3] num_warmup = 3500
Chain [3] save_warmup = 0 (Default)
Chain [3] thin = 1 (Default)
Chain [3] adapt
Chain [3] engaged = 1 (Default)
Chain [3] gamma = 0.050000000000000003 (Default)
Chain [3] delta = 0.80000000000000004 (Default)
Chain [3] kappa = 0.75 (Default)
Chain [3] t0 = 10 (Default)
Chain [3] init_buffer = 75 (Default)
Chain [3] term_buffer = 50 (Default)
Chain [3] window = 25 (Default)
Chain [3] algorithm = hmc (Default)
Chain [3] hmc
Chain [3] engine = nuts (Default)
Chain [3] nuts
Chain [3] max_depth = 10 (Default)
Chain [3] metric = diag_e (Default)
Chain [3] metric_file =  (Default)
Chain [3] stepsize = 1 (Default)
Chain [3] stepsize_jitter = 0 (Default)
Chain [3] num_chains = 1 (Default)
Chain [3] id = 3
Chain [3] data
Chain [3] file = /tmp/tmpz_9aujrb/u1ypr43x.json
Chain [3] init = 2 (Default)
Chain [3] random
Chain [3] seed = 88203
Chain [3] output
Chain [3] file = /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_3.csv
Chain [3] diagnostic_file =  (Default)
Chain [3] refresh = 100 (Default)
Chain [3] sig_figs = -1 (Default)
Chain [3] profile_file = profile.csv (Default)
Chain [3] num_threads = 1 (Default)
Chain [3] 
Chain [4] method = sample (Default)
Chain [4] sample
Chain [4] num_samples = 3500
Chain [4] num_warmup = 3500
Chain [4] save_warmup = 0 (Default)
Chain [4] thin = 1 (Default)
Chain [4] adapt
Chain [4] engaged = 1 (Default)
Chain [4] gamma = 0.050000000000000003 (Default)
Chain [4] delta = 0.80000000000000004 (Default)
Chain [4] kappa = 0.75 (Default)
Chain [4] t0 = 10 (Default)
Chain [4] init_buffer = 75 (Default)
Chain [4] term_buffer = 50 (Default)
Chain [4] window = 25 (Default)
Chain [4] algorithm = hmc (Default)
Chain [4] hmc
Chain [4] engine = nuts (Default)
Chain [4] nuts
Chain [4] max_depth = 10 (Default)
Chain [4] metric = diag_e (Default)
Chain [4] metric_file =  (Default)
Chain [4] stepsize = 1 (Default)
Chain [4] stepsize_jitter = 0 (Default)
Chain [4] num_chains = 1 (Default)
Chain [4] id = 4
Chain [4] data
Chain [4] file = /tmp/tmpz_9aujrb/u1ypr43x.json
Chain [4] init = 2 (Default)
Chain [4] random
Chain [4] seed = 88203
Chain [4] output
Chain [4] file = /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_4.csv
Chain [4] diagnostic_file =  (Default)
Chain [4] refresh = 100 (Default)
Chain [4] sig_figs = -1 (Default)
Chain [4] profile_file = profile.csv (Default)
Chain [4] num_threads = 1 (Default)
Chain [4] 
Chain [1] 
Chain [1] Gradient evaluation took 0.011983 seconds
Chain [1] 1000 transitions using 10 leapfrog steps per transition would take 119.83 seconds.
Chain [1] Adjust your expectations accordingly!
Chain [1] 
Chain [1] 
Chain [2] 
Chain [2] Gradient evaluation took 0.014778 seconds
Chain [2] 1000 transitions using 10 leapfrog steps per transition would take 147.78 seconds.
Chain [2] Adjust your expectations accordingly!
Chain [2] 
Chain [2] 
Chain [3] 
Chain [3] Gradient evaluation took 0.017641 seconds
Chain [3] 1000 transitions using 10 leapfrog steps per transition would take 176.41 seconds.
Chain [3] Adjust your expectations accordingly!
Chain [3] 
Chain [3] 
Chain [4] 
Chain [4] Gradient evaluation took 0.015538 seconds
Chain [4] 1000 transitions using 10 leapfrog steps per transition would take 155.38 seconds.
Chain [4] Adjust your expectations accordingly!
Chain [4] 
Chain [4] 
Chain [1] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [2] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [4] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [3] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [3] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [3] Exception: tmpwozzpipv_model_namespace::log_prob: drift_nonword_t[1] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 112, column 4 to column 39)
Chain [3] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [3] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [3] 
Chain [1] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [2] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [4] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [3] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [1] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [2] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [4] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [3] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [2] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [4] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [3] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [1] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [2] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [4] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [3] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [1] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [2] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [4] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [3] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [2] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [4] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [1] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [2] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [4] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [3] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [1] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [2] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [4] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [1] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [2] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [3] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [1] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [4] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [2] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [3] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [1] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [4] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [2] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [1] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [3] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [2] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [4] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [1] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [2] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [3] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [4] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [1] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [2] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [3] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [4] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [1] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [2] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [3] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [1] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [4] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [2] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [3] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [1] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [4] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [2] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [3] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [1] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [4] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [3] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [2] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [1] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [4] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [3] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [2] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [1] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [4] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [3] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [2] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [1] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [4] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [2] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [3] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [1] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [4] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [2] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [3] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [1] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [4] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [2] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [3] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [1] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [4] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [2] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [1] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [3] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [4] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [2] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [3] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [1] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [4] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [2] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [1] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [3] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [4] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [2] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [1] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [3] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [4] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [2] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [1] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [3] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [4] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [2] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [1] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [3] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [4] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [2] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [1] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [3] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [4] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [2] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [1] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [3] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [4] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [2] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [1] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [3] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [4] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [2] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [1] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [3] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [4] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [2] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [1] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [3] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [4] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [1] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [2] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [2] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [3] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [4] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [1] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [1] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [2] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [3] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [4] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [4] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [3] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [1] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [2] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [3] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [4] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [3] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [1] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [2] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [3] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [4] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [1] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [2] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [3] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [4] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [1] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [2] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [3] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [2] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [1] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [4] Iteration: 3900 / 7000 [ 55%]  (Sampling)
23:08:08 - cmdstanpy - INFO - Chain [2] done processing
23:12:59 - cmdstanpy - INFO - Chain [1] done processing
23:16:17 - cmdstanpy - INFO - Chain [3] done processing
23:18:57 - cmdstanpy - INFO - Chain [4] done processing
23:18:57 - cmdstanpy - WARNING - Non-fatal error during sampling:
Exception: tmpwozzpipv_model_namespace::log_prob: drift_nonword_t[1] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 112, column 4 to column 39)
Consider re-running with show_console=True if the above output is unclear!
Chain [3] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [2] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [1] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [4] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [3] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [2] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [1] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [4] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [3] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [2] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [1] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [4] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [3] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [1] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [4] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [3] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [2] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [1] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [4] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [2] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [3] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [1] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [4] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [2] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [3] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [1] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [4] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [2] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [3] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [1] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [2] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [4] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [3] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [1] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [2] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [3] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [4] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [1] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [2] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [3] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [4] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [1] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [2] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [3] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [4] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [1] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [2] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [3] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [1] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [4] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [2] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [3] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [1] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [4] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [2] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [3] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [1] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [4] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [2] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [3] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [1] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [4] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [2] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [3] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [1] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [4] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [2] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [3] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [1] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [2] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [4] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [3] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [1] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [2] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [4] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [3] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [1] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [2] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [4] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [3] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [1] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [2] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [4] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [3] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [1] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [2] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [3] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [4] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [1] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [2] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [3] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [4] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [2] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [1] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [3] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [4] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [2] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [1] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [3] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [4] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [2] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [1] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [2] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [4] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [1] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [3] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [2] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [2] 
Chain [2] Elapsed Time: 4774.67 seconds (Warm-up)
Chain [2] 5137.42 seconds (Sampling)
Chain [2] 9912.09 seconds (Total)
Chain [2] 
Chain [2] 
Chain [4] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [1] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [4] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [1] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [1] 
Chain [1] Elapsed Time: 4889.48 seconds (Warm-up)
Chain [1] 5313.33 seconds (Sampling)
Chain [1] 10202.8 seconds (Total)
Chain [1] 
Chain [1] 
Chain [4] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [3] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [4] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [3] 
Chain [3] Elapsed Time: 5177.56 seconds (Warm-up)
Chain [3] 5223.48 seconds (Sampling)
Chain [3] 10401 seconds (Total)
Chain [3] 
Chain [3] 
Chain [4] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [4] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [4] 
Chain [4] Elapsed Time: 5006.33 seconds (Warm-up)
Chain [4] 5554.85 seconds (Sampling)
Chain [4] 10561.2 seconds (Total)
Chain [4] 
Chain [4] 
***hmc diagnostics:
Processing csv files: /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_1.csv, /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_2.csv, /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_3.csv, /tmp/tmpz_9aujrb/RDM_hier_2k_beta_fvk0fuy9w/RDM_hier_2k_beta_f-20220811202256_4.csv

Checking sampler transitions treedepth.
Treedepth satisfactory for all transitions.

Checking sampler transitions for divergences.
No divergent transitions found.

Checking E-BFMI - sampler transitions HMC potential energy.
E-BFMI satisfactory.

Effective sample size satisfactory.

Split R-hat values satisfactory all parameters.

Processing complete, no problems detected.

***DF: 
                            Mean      MCSE  ...   N_Eff/s     R_hat
name                                        ...                    
lp__                 -354.394000  0.333331  ...  0.120144  1.001120
mu_g                   -3.072990  0.002914  ...  0.770326  1.000070
mu_m                   -0.156828  0.000462  ...  0.615596  1.000040
mu_threshold_word       1.177320  0.000526  ...  0.602522  0.999836
mu_threshold_nonword    1.503270  0.000723  ...  0.482473  1.000120
...                          ...       ...  ...       ...       ...
log_lik[10703]          0.287371  0.000585  ...  0.714016  0.999890
log_lik[10704]          0.201000  0.000442  ...  0.678445  0.999877
log_lik[10705]         -3.460900  0.001696  ...  0.704726  0.999887
log_lik[10706]         -1.744910  0.001907  ...  0.789952  0.999969
log_lik[10707]         -2.133930  0.001208  ...  0.765908  0.999900

[64747 rows x 9 columns]
***Rhat >= 1.01 or  <= 0.9
0
Empty DataFrame
Columns: [Mean, MCSE, StdDev, 5%, 50%, 95%, N_Eff, N_Eff/s, R_hat]
Index: []
       Mean  MCSE  StdDev   5%  50%  95%  N_Eff  N_Eff/s  R_hat
count   0.0   0.0     0.0  0.0  0.0  0.0    0.0      0.0    0.0
mean    NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
std     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
min     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
25%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
50%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
75%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
max     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
/home/m.siavashpour/home/final-aaai/FT_RDM_Estimation_cmd.py:541: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  HF_pred_rt_mean = HF_pred_rt.mean(axis=0)
/home/m.siavashpour/home/final-aaai/FT_RDM_Estimation_cmd.py:542: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  LF_pred_rt_mean = LF_pred_rt.mean(axis=0)
/home/m.siavashpour/home/final-aaai/FT_RDM_Estimation_cmd.py:543: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  NW_pred_rt_mean = NW_pred_rt.mean(axis=0)
/home/m.siavashpour/home/final-aaai/FT_RDM_Estimation_cmd.py:550: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  HF_pred_resp_mean = HF_pred_resp.mean(axis=0)
/home/m.siavashpour/home/final-aaai/FT_RDM_Estimation_cmd.py:551: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  LF_pred_resp_mean = LF_pred_resp.mean(axis=0)
/home/m.siavashpour/home/final-aaai/FT_RDM_Estimation_cmd.py:552: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  NW_pred_resp_mean = NW_pred_resp.mean(axis=0)
HF words, word drift mean and std:
4.031403176580591 0.05547562808882751
HF words, nonword drift mean and std:
1.4807564590342266 0.06346167169011047
LF words word drift mean and std:
2.903540549217353 0.05047003398609033
LF words nonword drift mean and std:
1.4950255597688404 0.0639615120592826
NW words word drift mean and std:
0.6935178939858627 0.04306733911255978
NW words nonword drift mean and std:
3.2921176099351244 0.04596162060202038
HF words, word threshold mean and std:
1.4486881833733662 0.029068999191619836
HF words, nonword threshold mean and std:
1.711437707672808 0.03531183671444454
LF words word threshold mean and std:
1.4474906271875951 0.029122506953642494
LF words nonword threshold mean and std:
1.7123929698307565 0.035278631668782576
NW words word threshold mean and std:
1.4514592602396867 0.02907330675125491
NW words nonword threshold mean and std:
1.708970881718985 0.03511214901579991
HF words ndt_t mean and std:
0.2995929871159277 0.00480671019694734
LF words ndt_t mean and std:
0.3016136076663033 0.004798115202779146
Non Words ndt_t mean and std:
0.3220252800715036 0.0060926623405824975
{'lppd': -130.96444788979244, 'p_waic': 194.5369780498384, 'waic': 651.0028518792617, 'waic_se': 252.76072199189394}
07:12:03 - cmdstanpy - INFO - deleting tmpfiles dir: /tmp/tmpz_9aujrb
07:12:04 - cmdstanpy - INFO - done
