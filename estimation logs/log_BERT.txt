nohup: ignoring input
/home/m.siavashpour/.conda/envs/stan-env/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.1
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"
08:43:04 - cmdstanpy - INFO - Chain [1] start processing
08:43:04 - cmdstanpy - INFO - Chain [2] start processing
08:43:04 - cmdstanpy - INFO - Chain [3] start processing
08:43:04 - cmdstanpy - INFO - Chain [4] start processing
   accuracy     rt         string  ...  category  word_prob  non_word_prob
0         0  0.707         bookie  ...        HF   0.798461       0.201539
1         1  0.769      gandbrake  ...        NW   0.407239       0.592761
2         1  0.526  philosophical  ...        HF   0.990039       0.009961
3         0  0.510       umbeaten  ...        NW   0.145103       0.854897
4         1  0.512      belonging  ...        HF   0.997104       0.002896

[5 rows x 11 columns]
         word_prob                  ... non_word_prob                    
              mean       std count  ...         count       max       min
category                            ...                                  
HF        0.934550  0.135254  2175  ...          2175  0.978626  0.000041
LF        0.805220  0.229543  2818  ...          2818  0.997075  0.000106
NW        0.190963  0.243645  5714  ...          5714  0.999617  0.020421

[3 rows x 10 columns]
                rt                          response                  
              mean       std    max    min      mean       std max min
category                                                              
HF        0.684127  0.269523  2.551  0.295  0.951724  0.214398   1   0
LF        0.810483  0.335684  2.861  0.234  0.822214  0.382400   1   0
NW        0.858051  0.344388  2.974  0.200  0.127931  0.334043   1   0
Chain [1] method = sample (Default)
Chain [1] sample
Chain [1] num_samples = 3500
Chain [1] num_warmup = 3500
Chain [1] save_warmup = 0 (Default)
Chain [1] thin = 1 (Default)
Chain [1] adapt
Chain [1] engaged = 1 (Default)
Chain [1] gamma = 0.050000000000000003 (Default)
Chain [1] delta = 0.80000000000000004 (Default)
Chain [1] kappa = 0.75 (Default)
Chain [1] t0 = 10 (Default)
Chain [1] init_buffer = 75 (Default)
Chain [1] term_buffer = 50 (Default)
Chain [1] window = 25 (Default)
Chain [1] algorithm = hmc (Default)
Chain [1] hmc
Chain [1] engine = nuts (Default)
Chain [1] nuts
Chain [1] max_depth = 10 (Default)
Chain [1] metric = diag_e (Default)
Chain [1] metric_file =  (Default)
Chain [1] stepsize = 1 (Default)
Chain [1] stepsize_jitter = 0 (Default)
Chain [1] num_chains = 1 (Default)
Chain [1] id = 1 (Default)
Chain [1] data
Chain [1] file = /tmp/tmpdz_54h7y/uz0pc756.json
Chain [1] init = 2 (Default)
Chain [1] random
Chain [1] seed = 80652
Chain [1] output
Chain [1] file = /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_1.csv
Chain [1] diagnostic_file =  (Default)
Chain [1] refresh = 100 (Default)
Chain [1] sig_figs = -1 (Default)
Chain [1] profile_file = profile.csv (Default)
Chain [1] num_threads = 1 (Default)
Chain [1] 
Chain [2] method = sample (Default)
Chain [2] sample
Chain [2] num_samples = 3500
Chain [2] num_warmup = 3500
Chain [2] save_warmup = 0 (Default)
Chain [2] thin = 1 (Default)
Chain [2] adapt
Chain [2] engaged = 1 (Default)
Chain [2] gamma = 0.050000000000000003 (Default)
Chain [2] delta = 0.80000000000000004 (Default)
Chain [2] kappa = 0.75 (Default)
Chain [2] t0 = 10 (Default)
Chain [2] init_buffer = 75 (Default)
Chain [2] term_buffer = 50 (Default)
Chain [2] window = 25 (Default)
Chain [2] algorithm = hmc (Default)
Chain [2] hmc
Chain [2] engine = nuts (Default)
Chain [2] nuts
Chain [2] max_depth = 10 (Default)
Chain [2] metric = diag_e (Default)
Chain [2] metric_file =  (Default)
Chain [2] stepsize = 1 (Default)
Chain [2] stepsize_jitter = 0 (Default)
Chain [2] num_chains = 1 (Default)
Chain [2] id = 2
Chain [2] data
Chain [2] file = /tmp/tmpdz_54h7y/uz0pc756.json
Chain [2] init = 2 (Default)
Chain [2] random
Chain [2] seed = 80652
Chain [2] output
Chain [2] file = /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_2.csv
Chain [2] diagnostic_file =  (Default)
Chain [2] refresh = 100 (Default)
Chain [2] sig_figs = -1 (Default)
Chain [2] profile_file = profile.csv (Default)
Chain [2] num_threads = 1 (Default)
Chain [2] 
Chain [4] method = sample (Default)
Chain [4] sample
Chain [4] num_samples = 3500
Chain [4] num_warmup = 3500
Chain [4] save_warmup = 0 (Default)
Chain [4] thin = 1 (Default)
Chain [4] adapt
Chain [4] engaged = 1 (Default)
Chain [4] gamma = 0.050000000000000003 (Default)
Chain [4] delta = 0.80000000000000004 (Default)
Chain [4] kappa = 0.75 (Default)
Chain [4] t0 = 10 (Default)
Chain [4] init_buffer = 75 (Default)
Chain [4] term_buffer = 50 (Default)
Chain [4] window = 25 (Default)
Chain [4] algorithm = hmc (Default)
Chain [4] hmc
Chain [4] engine = nuts (Default)
Chain [4] nuts
Chain [4] max_depth = 10 (Default)
Chain [4] metric = diag_e (Default)
Chain [4] metric_file =  (Default)
Chain [4] stepsize = 1 (Default)
Chain [4] stepsize_jitter = 0 (Default)
Chain [4] num_chains = 1 (Default)
Chain [4] id = 4
Chain [4] data
Chain [4] file = /tmp/tmpdz_54h7y/uz0pc756.json
Chain [4] init = 2 (Default)
Chain [4] random
Chain [4] seed = 80652
Chain [4] output
Chain [4] file = /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_4.csv
Chain [4] diagnostic_file =  (Default)
Chain [4] refresh = 100 (Default)
Chain [4] sig_figs = -1 (Default)
Chain [4] profile_file = profile.csv (Default)
Chain [4] num_threads = 1 (Default)
Chain [4] 
Chain [3] method = sample (Default)
Chain [3] sample
Chain [3] num_samples = 3500
Chain [3] num_warmup = 3500
Chain [3] save_warmup = 0 (Default)
Chain [3] thin = 1 (Default)
Chain [3] adapt
Chain [3] engaged = 1 (Default)
Chain [3] gamma = 0.050000000000000003 (Default)
Chain [3] delta = 0.80000000000000004 (Default)
Chain [3] kappa = 0.75 (Default)
Chain [3] t0 = 10 (Default)
Chain [3] init_buffer = 75 (Default)
Chain [3] term_buffer = 50 (Default)
Chain [3] window = 25 (Default)
Chain [3] algorithm = hmc (Default)
Chain [3] hmc
Chain [3] engine = nuts (Default)
Chain [3] nuts
Chain [3] max_depth = 10 (Default)
Chain [3] metric = diag_e (Default)
Chain [3] metric_file =  (Default)
Chain [3] stepsize = 1 (Default)
Chain [3] stepsize_jitter = 0 (Default)
Chain [3] num_chains = 1 (Default)
Chain [3] id = 3
Chain [3] data
Chain [3] file = /tmp/tmpdz_54h7y/uz0pc756.json
Chain [3] init = 2 (Default)
Chain [3] random
Chain [3] seed = 80652
Chain [3] output
Chain [3] file = /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_3.csv
Chain [3] diagnostic_file =  (Default)
Chain [3] refresh = 100 (Default)
Chain [3] sig_figs = -1 (Default)
Chain [3] profile_file = profile.csv (Default)
Chain [3] num_threads = 1 (Default)
Chain [3] 
Chain [3] 
Chain [3] Gradient evaluation took 0.015179 seconds
Chain [3] 1000 transitions using 10 leapfrog steps per transition would take 151.79 seconds.
Chain [3] Adjust your expectations accordingly!
Chain [3] 
Chain [3] 
Chain [2] 
Chain [1] 
Chain [2] Gradient evaluation took 0.017333 seconds
Chain [2] 1000 transitions using 10 leapfrog steps per transition would take 173.33 seconds.
Chain [2] Adjust your expectations accordingly!
Chain [2] 
Chain [2] 
Chain [1] Gradient evaluation took 0.017809 seconds
Chain [1] 1000 transitions using 10 leapfrog steps per transition would take 178.09 seconds.
Chain [1] Adjust your expectations accordingly!
Chain [1] 
Chain [1] 
Chain [4] 
Chain [4] Gradient evaluation took 0.020337 seconds
Chain [4] 1000 transitions using 10 leapfrog steps per transition would take 203.37 seconds.
Chain [4] Adjust your expectations accordingly!
Chain [4] 
Chain [4] 
Chain [2] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [1] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [3] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [4] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: tmpwozzpipv_model_namespace::log_prob: drift_word_t[2] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [1] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [1] Exception: tmpwozzpipv_model_namespace::log_prob: drift_nonword_t[1] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 112, column 4 to column 39)
Chain [1] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [1] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [1] 
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: tmpwozzpipv_model_namespace::log_prob: drift_word_t[2] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [1] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [1] Exception: tmpwozzpipv_model_namespace::log_prob: drift_nonword_t[1] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 112, column 4 to column 39)
Chain [1] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [1] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [1] 
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: tmpwozzpipv_model_namespace::log_prob: drift_word_t[2] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [2] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [4] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [1] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [3] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [2] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [4] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [1] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [3] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [4] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [2] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [1] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [4] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [3] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [2] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [1] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [3] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [4] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [2] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [1] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [3] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [4] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [2] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [1] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [3] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [4] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [2] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [1] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [4] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [3] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [2] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [1] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [3] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [2] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [4] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [1] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [2] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [3] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [4] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [1] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [2] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [4] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [3] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [1] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [4] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [2] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [3] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [1] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [4] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [2] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [3] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [1] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [2] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [4] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [3] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [1] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [2] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [4] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [3] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [1] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [2] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [4] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [3] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [1] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [3] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [2] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [4] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [1] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [2] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [4] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [3] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [1] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [2] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [4] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [3] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [1] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [2] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [4] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [3] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [1] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [2] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [4] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [3] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [1] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [2] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [4] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [3] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [1] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [2] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [4] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [3] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [1] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [2] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [4] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [3] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [1] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [2] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [4] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [3] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [1] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [2] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [4] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [1] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [3] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [2] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [4] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [1] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [3] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [2] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [4] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [1] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [3] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [2] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [4] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [1] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [3] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [2] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [4] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [1] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [3] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [2] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [4] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [1] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [3] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [2] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [4] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [1] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [3] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [2] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [4] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [1] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [3] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [2] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [4] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [1] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [3] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [2] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [2] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [4] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [4] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [1] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [1] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [3] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [2] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [4] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [1] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [3] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [3] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [4] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [2] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [1] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [3] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [4] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [1] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [2] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [3] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [4] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [1] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [2] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [3] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [4] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [1] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [3] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [2] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [4] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [1] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [3] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [2] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [4] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [1] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [3] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [2] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [4] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [1] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [3] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [4] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [1] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [3] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [4] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [2] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [1] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [3] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [4] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [2] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [1] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [3] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [4] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [1] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [2] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [3] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [4] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [1] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [2] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [3] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [4] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [1] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [2] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [3] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [4] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [1] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [3] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [2] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [4] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [1] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [3] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [2] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [4] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [1] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [3] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [2] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [4] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [1] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [3] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [4] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [1] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [2] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [3] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [4] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [1] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [2] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [3] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [4] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [1] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [3] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [2] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [1] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [4] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [3] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [2] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [1] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [4] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [3] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [2] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [1] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [4] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [3] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [2] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [1] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [4] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [3] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [2] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [1] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [4] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [3] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [1] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [2] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [4] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [3] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [1] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [4] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [2] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [3] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [1] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [4] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [3] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [2] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [1] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [4] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [3] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [2] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [1] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [4] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [2] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [1] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [4] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [3] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [2] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [1] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [4] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [2] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 6900 / 7000 [ 98%]  (Sampling)
10:37:14 - cmdstanpy - INFO - Chain [1] done processing
10:37:28 - cmdstanpy - INFO - Chain [4] done processing
10:38:37 - cmdstanpy - INFO - Chain [3] done processing
10:41:19 - cmdstanpy - INFO - Chain [2] done processing
10:41:19 - cmdstanpy - WARNING - Non-fatal error during sampling:
Exception: tmpwozzpipv_model_namespace::log_prob: drift_nonword_t[1] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 112, column 4 to column 39)
	Exception: tmpwozzpipv_model_namespace::log_prob: drift_nonword_t[1] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 112, column 4 to column 39)
Exception: tmpwozzpipv_model_namespace::log_prob: drift_word_t[2] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 111, column 4 to column 36)
	Exception: tmpwozzpipv_model_namespace::log_prob: drift_word_t[2] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 111, column 4 to column 36)
	Exception: tmpwozzpipv_model_namespace::log_prob: drift_word_t[2] is -nan, but must be greater than or equal to 0.000000 (in '/tmp/tmpr0ido76s/tmpwozzpipv.stan', line 111, column 4 to column 36)
Consider re-running with show_console=True if the above output is unclear!
10:41:43 - cmdstanpy - WARNING - Some chains may have failed to converge.
	Chain 1 had 4 divergent transitions (0.1%)
	Chain 2 had 4 divergent transitions (0.1%)
	Chain 3 had 2 divergent transitions (0.1%)
	Chain 4 had 3 divergent transitions (0.1%)
	Use function "diagnose()" to see further information.
Chain [4] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [3] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [1] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [1] 
Chain [1] Elapsed Time: 3902.14 seconds (Warm-up)
Chain [1] 2946.99 seconds (Sampling)
Chain [1] 6849.13 seconds (Total)
Chain [1] 
Chain [1] 
Chain [2] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [4] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [4] 
Chain [4] Elapsed Time: 3883.45 seconds (Warm-up)
Chain [4] 2980.06 seconds (Sampling)
Chain [4] 6863.51 seconds (Total)
Chain [4] 
Chain [4] 
Chain [3] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [2] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [3] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [3] 
Chain [3] Elapsed Time: 4017.59 seconds (Warm-up)
Chain [3] 2915.03 seconds (Sampling)
Chain [3] 6932.61 seconds (Total)
Chain [3] 
Chain [3] 
Chain [2] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [2] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [2] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [2] 
Chain [2] Elapsed Time: 3869.49 seconds (Warm-up)
Chain [2] 3225.05 seconds (Sampling)
Chain [2] 7094.53 seconds (Total)
Chain [2] 
Chain [2] 
***hmc diagnostics:
Processing csv files: /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_1.csv, /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_2.csv, /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_3.csv, /tmp/tmpdz_54h7y/RDM_hier_2k_beta_fzg9i0omj/RDM_hier_2k_beta_f-20220812084304_4.csv

Checking sampler transitions treedepth.
Treedepth satisfactory for all transitions.

Checking sampler transitions for divergences.
13 of 14000 (0.09%) transitions ended with a divergence.
These divergent transitions indicate that HMC is not fully able to explore the posterior distribution.
Try increasing adapt delta closer to 1.
If this doesn't remove all divergences, try to reparameterize the model.

Checking E-BFMI - sampler transitions HMC potential energy.
E-BFMI satisfactory.

Effective sample size satisfactory.

Split R-hat values satisfactory all parameters.

Processing complete.

***DF: 
                            Mean      MCSE  ...   N_Eff/s     R_hat
name                                        ...                    
lp__                 -694.830000  0.311633  ...  0.217747  1.001090
mu_g                   -4.933300  0.003847  ...  1.507630  0.999820
mu_m                   -0.158204  0.000649  ...  0.521542  1.000460
mu_threshold_word       1.229950  0.000709  ...  0.531568  1.000440
mu_threshold_nonword    1.636560  0.001180  ...  0.315423  1.000180
...                          ...       ...  ...       ...       ...
log_lik[10703]          0.339253  0.000607  ...  1.186930  0.999783
log_lik[10704]          0.218140  0.000394  ...  1.357960  0.999944
log_lik[10705]         -3.589980  0.001666  ...  1.523400  0.999898
log_lik[10706]         -1.450650  0.001504  ...  1.430500  0.999989
log_lik[10707]         -0.806904  0.001386  ...  1.238870  0.999811

[64747 rows x 9 columns]
***Rhat > 1.01: 
0
Empty DataFrame
Columns: [Mean, MCSE, StdDev, 5%, 50%, 95%, N_Eff, N_Eff/s, R_hat]
Index: []
       Mean  MCSE  StdDev   5%  50%  95%  N_Eff  N_Eff/s  R_hat
count   0.0   0.0     0.0  0.0  0.0  0.0    0.0      0.0    0.0
mean    NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
std     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
min     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
25%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
50%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
75%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
max     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
/home/m.siavashpour/home/final-aaai/BERT_RDM_Estimation_cmd.py:537: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  HF_pred_rt_mean = HF_pred_rt.mean(axis=0)
/home/m.siavashpour/home/final-aaai/BERT_RDM_Estimation_cmd.py:538: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  LF_pred_rt_mean = LF_pred_rt.mean(axis=0)
/home/m.siavashpour/home/final-aaai/BERT_RDM_Estimation_cmd.py:539: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  NW_pred_rt_mean = NW_pred_rt.mean(axis=0)
/home/m.siavashpour/home/final-aaai/BERT_RDM_Estimation_cmd.py:546: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  HF_pred_resp_mean = HF_pred_resp.mean(axis=0)
/home/m.siavashpour/home/final-aaai/BERT_RDM_Estimation_cmd.py:547: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  LF_pred_resp_mean = LF_pred_resp.mean(axis=0)
/home/m.siavashpour/home/final-aaai/BERT_RDM_Estimation_cmd.py:548: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  NW_pred_resp_mean = NW_pred_resp.mean(axis=0)
HF words, word drift mean and std:
4.277912181673826 0.05283090471894271
HF words, nonword drift mean and std:
1.986775327312184 0.05361498928132189
LF words word drift mean and std:
2.769654342635734 0.04889945084657532
LF words nonword drift mean and std:
2.215121098023801 0.051360609836469805
NW words word drift mean and std:
0.8760916252247839 0.04577915336076586
NW words nonword drift mean and std:
3.245091303433247 0.04453224316398387
HF words, word threshold mean and std:
1.4883553680174055 0.030497032872448503
HF words, nonword threshold mean and std:
1.8224310396518881 0.03295530827638407
LF words word threshold mean and std:
1.4872219977647265 0.030548271043404854
LF words nonword threshold mean and std:
1.8212404196205514 0.03300572838065399
NW words word threshold mean and std:
1.4898654690829043 0.030517671943831422
NW words nonword threshold mean and std:
1.8172438295411026 0.032813349952651755
HF words ndt_t mean and std:
0.29886046317888343 0.004979755868673276
LF words ndt_t mean and std:
0.29804276289531584 0.004967720453023425
Non Words ndt_t mean and std:
0.3027259594826616 0.005204352490367998
{'lppd': -467.8676211013674, 'p_waic': 183.91269426516732, 'waic': 1303.5606307330695, 'waic_se': 249.2772816005507}
18:42:45 - cmdstanpy - INFO - deleting tmpfiles dir: /tmp/tmpdz_54h7y
18:42:45 - cmdstanpy - INFO - done
