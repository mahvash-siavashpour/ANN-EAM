nohup: ignoring input
INFO:cmdstanpy:compiling stan file /storage/users/adadras/ANNEAM/stan files/RDM_hier_3d.stan to exe file /storage/users/adadras/ANNEAM/stan files/RDM_hier_3d
INFO:cmdstanpy:compiled model executable: /storage/users/adadras/ANNEAM/stan files/RDM_hier_3d
WARNING:cmdstanpy:Stan compiler has produced 19 warnings:
WARNING:cmdstanpy:
--- Translating Stan model to C++ code ---
bin/stanc  --o=/tmp/tmpt_8nnyd7/tmp_u5euw7e.hpp /tmp/tmpt_8nnyd7/tmp_u5euw7e.stan
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 51, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 52, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 53, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 54, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 56, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 85, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 86, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 88, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 89, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 90, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 91, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 92, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 103, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 104, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 105, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 106, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 107, column 4: Declaration
    of arrays by placing brackets after a variable name is deprecated and
    will be removed in Stan 2.32.0. Instead use the array keyword before the
    type. This can be changed automatically using the auto-format flag to
    stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 27, column 30: Use of
    race_cdf without a vertical bar (|) between the first two arguments of a
    CDF is deprecated and will be removed in Stan 2.32.0. This can be
    automatically changed using the canonicalize flag for stanc
Warning in '/tmp/tmpt_8nnyd7/tmp_u5euw7e.stan', line 31, column 30: Use of
    race_cdf without a vertical bar (|) between the first two arguments of a
    CDF is deprecated and will be removed in Stan 2.32.0. This can be
    automatically changed using the canonicalize flag for stanc

--- Compiling, linking C++ code ---
g++ -std=c++1y -pthread -D_REENTRANT -Wno-sign-compare -Wno-ignored-attributes      -I stan/lib/stan_math/lib/tbb_2020.3/include    -O3 -I src -I stan/src -I lib/rapidjson_1.1.0/ -I lib/CLI11-1.9.1/ -I stan/lib/stan_math/ -I stan/lib/stan_math/lib/eigen_3.3.9 -I stan/lib/stan_math/lib/boost_1.78.0 -I stan/lib/stan_math/lib/sundials_6.1.1/include -I stan/lib/stan_math/lib/sundials_6.1.1/src/sundials    -DBOOST_DISABLE_ASSERTS          -c -Wno-ignored-attributes   -x c++ -o /tmp/tmpt_8nnyd7/tmp_u5euw7e.o /tmp/tmpt_8nnyd7/tmp_u5euw7e.hpp
g++ -std=c++1y -pthread -D_REENTRANT -Wno-sign-compare -Wno-ignored-attributes      -I stan/lib/stan_math/lib/tbb_2020.3/include    -O3 -I src -I stan/src -I lib/rapidjson_1.1.0/ -I lib/CLI11-1.9.1/ -I stan/lib/stan_math/ -I stan/lib/stan_math/lib/eigen_3.3.9 -I stan/lib/stan_math/lib/boost_1.78.0 -I stan/lib/stan_math/lib/sundials_6.1.1/include -I stan/lib/stan_math/lib/sundials_6.1.1/src/sundials    -DBOOST_DISABLE_ASSERTS                -Wl,-L,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb" -Wl,-rpath,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb"      /tmp/tmpt_8nnyd7/tmp_u5euw7e.o src/cmdstan/main.o        -Wl,-L,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb" -Wl,-rpath,"/storage/users/adadras/.cmdstan/cmdstan-2.30.1/stan/lib/stan_math/lib/tbb"   stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_nvecserial.a stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_cvodes.a stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_idas.a stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_kinsol.a  stan/lib/stan_math/lib/tbb/libtbb.so.2 -o /tmp/tmpt_8nnyd7/tmp_u5euw7e
rm -f /tmp/tmpt_8nnyd7/tmp_u5euw7e.o

INFO:cmdstanpy:Chain [1] start processing
INFO:cmdstanpy:Chain [2] start processing
INFO:cmdstanpy:Chain [3] start processing
INFO:cmdstanpy:Chain [4] start processing
INFO:cmdstanpy:Chain [4] done processing
INFO:cmdstanpy:Chain [1] done processing
INFO:cmdstanpy:Chain [3] done processing
INFO:cmdstanpy:Chain [2] done processing
   accuracy     rt         string  ...  category     word_prob  non_word_prob
0         0  0.707         bookie  ...        HF  9.982517e-01       0.001748
1         1  0.769      gandbrake  ...        NW  3.736372e-08       1.000000
2         1  0.526  philosophical  ...        HF  9.968132e-01       0.003187
3         0  0.510       umbeaten  ...        NW  5.537812e-05       0.999945
4         1  0.512      belonging  ...        HF  9.985624e-01       0.001438

[5 rows x 11 columns]
         word_prob                  ... non_word_prob                        
              mean       std count  ...         count       max           min
category                            ...                                      
HF        0.992735  0.051735  2175  ...          2175  0.997363  1.709619e-14
LF        0.987029  0.062231  2818  ...          2818  1.000000  4.915254e-13
NW        0.004638  0.051215  5714  ...          5714  1.000000  1.144295e-03

[3 rows x 10 columns]
                rt                          response                  
              mean       std    max    min      mean       std max min
category                                                              
HF        0.684127  0.269523  2.551  0.295  0.951724  0.214398   1   0
LF        0.810483  0.335684  2.861  0.234  0.822214  0.382400   1   0
NW        0.858051  0.344388  2.974  0.200  0.127931  0.334043   1   0
Chain [2] method = sample (Default)
Chain [2] sample
Chain [2] num_samples = 3500
Chain [1] method = sample (Default)
Chain [3] method = sample (Default)
Chain [3] sample
Chain [3] num_samples = 3500
Chain [1] sample
Chain [3] num_warmup = 3500
Chain [3] save_warmup = 0 (Default)
Chain [3] thin = 1 (Default)
Chain [3] adapt
Chain [2] num_warmup = 3500
Chain [2] save_warmup = 0 (Default)
Chain [3] engaged = 1 (Default)
Chain [1] num_samples = 3500
Chain [2] thin = 1 (Default)
Chain [2] adapt
Chain [2] engaged = 1 (Default)
Chain [2] gamma = 0.050000000000000003 (Default)
Chain [2] delta = 0.80000000000000004 (Default)
Chain [2] kappa = 0.75 (Default)
Chain [1] num_warmup = 3500
Chain [3] gamma = 0.050000000000000003 (Default)
Chain [2] t0 = 10 (Default)
Chain [3] delta = 0.80000000000000004 (Default)
Chain [3] kappa = 0.75 (Default)
Chain [1] save_warmup = 0 (Default)
Chain [2] init_buffer = 75 (Default)
Chain [1] thin = 1 (Default)
Chain [3] t0 = 10 (Default)
Chain [3] init_buffer = 75 (Default)
Chain [3] term_buffer = 50 (Default)
Chain [2] term_buffer = 50 (Default)
Chain [2] window = 25 (Default)
Chain [2] algorithm = hmc (Default)
Chain [1] adapt
Chain [3] window = 25 (Default)
Chain [3] algorithm = hmc (Default)
Chain [3] hmc
Chain [1] engaged = 1 (Default)
Chain [2] hmc
Chain [2] engine = nuts (Default)
Chain [2] nuts
Chain [3] engine = nuts (Default)
Chain [1] gamma = 0.050000000000000003 (Default)
Chain [2] max_depth = 10 (Default)
Chain [1] delta = 0.80000000000000004 (Default)
Chain [3] nuts
Chain [3] max_depth = 10 (Default)
Chain [3] metric = diag_e (Default)
Chain [1] kappa = 0.75 (Default)
Chain [2] metric = diag_e (Default)
Chain [1] t0 = 10 (Default)
Chain [3] metric_file =  (Default)
Chain [3] stepsize = 1 (Default)
Chain [3] stepsize_jitter = 0 (Default)
Chain [2] metric_file =  (Default)
Chain [2] stepsize = 1 (Default)
Chain [2] stepsize_jitter = 0 (Default)
Chain [2] num_chains = 1 (Default)
Chain [2] id = 2
Chain [2] data
Chain [2] file = /tmp/tmpsv9hfkco/c47_w6ub.json
Chain [3] num_chains = 1 (Default)
Chain [3] id = 3
Chain [1] init_buffer = 75 (Default)
Chain [2] init = 2 (Default)
Chain [1] term_buffer = 50 (Default)
Chain [3] data
Chain [3] file = /tmp/tmpsv9hfkco/c47_w6ub.json
Chain [3] init = 2 (Default)
Chain [1] window = 25 (Default)
Chain [2] random
Chain [1] algorithm = hmc (Default)
Chain [3] random
Chain [3] seed = 47771
Chain [3] output
Chain [2] seed = 47771
Chain [2] output
Chain [2] file = /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_2.csv
Chain [2] diagnostic_file =  (Default)
Chain [2] refresh = 100 (Default)
Chain [2] sig_figs = -1 (Default)
Chain [2] profile_file = profile.csv (Default)
Chain [3] file = /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_3.csv
Chain [3] diagnostic_file =  (Default)
Chain [1] hmc
Chain [2] num_threads = 1 (Default)
Chain [1] engine = nuts (Default)
Chain [3] refresh = 100 (Default)
Chain [3] sig_figs = -1 (Default)
Chain [3] profile_file = profile.csv (Default)
Chain [1] nuts
Chain [2] 
Chain [3] num_threads = 1 (Default)
Chain [3] 
Chain [1] max_depth = 10 (Default)
Chain [1] metric = diag_e (Default)
Chain [1] metric_file =  (Default)
Chain [1] stepsize = 1 (Default)
Chain [1] stepsize_jitter = 0 (Default)
Chain [1] num_chains = 1 (Default)
Chain [1] id = 1 (Default)
Chain [1] data
Chain [1] file = /tmp/tmpsv9hfkco/c47_w6ub.json
Chain [1] init = 2 (Default)
Chain [1] random
Chain [1] seed = 47771
Chain [1] output
Chain [1] file = /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_1.csv
Chain [1] diagnostic_file =  (Default)
Chain [1] refresh = 100 (Default)
Chain [1] sig_figs = -1 (Default)
Chain [1] profile_file = profile.csv (Default)
Chain [1] num_threads = 1 (Default)
Chain [1] 
Chain [4] method = sample (Default)
Chain [4] sample
Chain [4] num_samples = 3500
Chain [4] num_warmup = 3500
Chain [4] save_warmup = 0 (Default)
Chain [4] thin = 1 (Default)
Chain [4] adapt
Chain [4] engaged = 1 (Default)
Chain [4] gamma = 0.050000000000000003 (Default)
Chain [4] delta = 0.80000000000000004 (Default)
Chain [4] kappa = 0.75 (Default)
Chain [4] t0 = 10 (Default)
Chain [4] init_buffer = 75 (Default)
Chain [4] term_buffer = 50 (Default)
Chain [4] window = 25 (Default)
Chain [4] algorithm = hmc (Default)
Chain [4] hmc
Chain [4] engine = nuts (Default)
Chain [4] nuts
Chain [4] max_depth = 10 (Default)
Chain [4] metric = diag_e (Default)
Chain [4] metric_file =  (Default)
Chain [4] stepsize = 1 (Default)
Chain [4] stepsize_jitter = 0 (Default)
Chain [4] num_chains = 1 (Default)
Chain [4] id = 4
Chain [4] data
Chain [4] file = /tmp/tmpsv9hfkco/c47_w6ub.json
Chain [4] init = 2 (Default)
Chain [4] random
Chain [4] seed = 47771
Chain [4] output
Chain [4] file = /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_4.csv
Chain [4] diagnostic_file =  (Default)
Chain [4] refresh = 100 (Default)
Chain [4] sig_figs = -1 (Default)
Chain [4] profile_file = profile.csv (Default)
Chain [4] num_threads = 1 (Default)
Chain [4] 
Chain [3] 
Chain [3] Gradient evaluation took 0.017711 seconds
Chain [3] 1000 transitions using 10 leapfrog steps per transition would take 177.11 seconds.
Chain [3] Adjust your expectations accordingly!
Chain [3] 
Chain [3] 
Chain [1] 
Chain [1] Gradient evaluation took 0.031987 seconds
Chain [1] 1000 transitions using 10 leapfrog steps per transition would take 319.87 seconds.
Chain [1] Adjust your expectations accordingly!
Chain [1] 
Chain [1] 
Chain [2] 
Chain [2] Gradient evaluation took 0.033386 seconds
Chain [2] 1000 transitions using 10 leapfrog steps per transition would take 333.86 seconds.
Chain [2] Adjust your expectations accordingly!
Chain [2] 
Chain [2] 
Chain [4] 
Chain [4] Gradient evaluation took 0.030359 seconds
Chain [4] 1000 transitions using 10 leapfrog steps per transition would take 303.59 seconds.
Chain [4] Adjust your expectations accordingly!
Chain [4] 
Chain [4] 
Chain [4] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [1] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [3] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [2] Iteration:    1 / 7000 [  0%]  (Warmup)
Chain [4] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [2] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [1] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [3] Iteration:  100 / 7000 [  1%]  (Warmup)
Chain [4] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [2] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [1] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [3] Iteration:  200 / 7000 [  2%]  (Warmup)
Chain [4] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [2] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [1] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [3] Iteration:  300 / 7000 [  4%]  (Warmup)
Chain [4] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [2] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [1] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [3] Iteration:  400 / 7000 [  5%]  (Warmup)
Chain [4] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [2] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [1] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [4] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [3] Iteration:  500 / 7000 [  7%]  (Warmup)
Chain [4] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [2] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [1] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [3] Iteration:  600 / 7000 [  8%]  (Warmup)
Chain [4] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [2] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [1] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [3] Iteration:  700 / 7000 [ 10%]  (Warmup)
Chain [4] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [1] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [2] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [4] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [3] Iteration:  800 / 7000 [ 11%]  (Warmup)
Chain [2] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [1] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [4] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [3] Iteration:  900 / 7000 [ 12%]  (Warmup)
Chain [2] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [1] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [4] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [3] Iteration: 1000 / 7000 [ 14%]  (Warmup)
Chain [4] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [1] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [2] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [4] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [3] Iteration: 1100 / 7000 [ 15%]  (Warmup)
Chain [1] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [2] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [4] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [3] Iteration: 1200 / 7000 [ 17%]  (Warmup)
Chain [2] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [1] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [4] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [3] Iteration: 1300 / 7000 [ 18%]  (Warmup)
Chain [2] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [1] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [4] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [3] Iteration: 1400 / 7000 [ 20%]  (Warmup)
Chain [2] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [1] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [4] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [4] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [3] Iteration: 1500 / 7000 [ 21%]  (Warmup)
Chain [2] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [1] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [4] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [3] Iteration: 1600 / 7000 [ 22%]  (Warmup)
Chain [2] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [1] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [4] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [3] Iteration: 1700 / 7000 [ 24%]  (Warmup)
Chain [2] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [1] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [4] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [4] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [3] Iteration: 1800 / 7000 [ 25%]  (Warmup)
Chain [2] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [1] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [4] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [3] Iteration: 1900 / 7000 [ 27%]  (Warmup)
Chain [2] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [1] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [4] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [2] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [3] Iteration: 2000 / 7000 [ 28%]  (Warmup)
Chain [1] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [4] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [2] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [1] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [3] Iteration: 2100 / 7000 [ 30%]  (Warmup)
Chain [4] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [2] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [1] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [4] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [3] Iteration: 2200 / 7000 [ 31%]  (Warmup)
Chain [2] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [1] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [4] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [3] Iteration: 2300 / 7000 [ 32%]  (Warmup)
Chain [4] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [2] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [1] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [3] Iteration: 2400 / 7000 [ 34%]  (Warmup)
Chain [4] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [2] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [1] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [3] Iteration: 2500 / 7000 [ 35%]  (Warmup)
Chain [4] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [2] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [1] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [4] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [3] Iteration: 2600 / 7000 [ 37%]  (Warmup)
Chain [2] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [1] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [4] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [3] Iteration: 2700 / 7000 [ 38%]  (Warmup)
Chain [2] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [1] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [4] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [4] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [3] Iteration: 2800 / 7000 [ 40%]  (Warmup)
Chain [2] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [1] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [4] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [3] Iteration: 2900 / 7000 [ 41%]  (Warmup)
Chain [2] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [1] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [4] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [3] Iteration: 3000 / 7000 [ 42%]  (Warmup)
Chain [2] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [1] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [4] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [3] Iteration: 3100 / 7000 [ 44%]  (Warmup)
Chain [2] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [1] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [4] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [3] Iteration: 3200 / 7000 [ 45%]  (Warmup)
Chain [2] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [1] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [4] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [3] Iteration: 3300 / 7000 [ 47%]  (Warmup)
Chain [4] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [1] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [1] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [2] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [2] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [3] Iteration: 3400 / 7000 [ 48%]  (Warmup)
Chain [4] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [1] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [3] Iteration: 3500 / 7000 [ 50%]  (Warmup)
Chain [3] Iteration: 3501 / 7000 [ 50%]  (Sampling)
Chain [4] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [2] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [1] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [3] Iteration: 3600 / 7000 [ 51%]  (Sampling)
Chain [4] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [4] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [3] Iteration: 3700 / 7000 [ 52%]  (Sampling)
Chain [2] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [1] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [4] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [3] Iteration: 3800 / 7000 [ 54%]  (Sampling)
Chain [1] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [2] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [4] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [3] Iteration: 3900 / 7000 [ 55%]  (Sampling)
Chain [1] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [2] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [4] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [3] Iteration: 4000 / 7000 [ 57%]  (Sampling)
Chain [1] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [2] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [4] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [3] Iteration: 4100 / 7000 [ 58%]  (Sampling)
Chain [4] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [1] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [2] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [4] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [3] Iteration: 4200 / 7000 [ 60%]  (Sampling)
Chain [1] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [2] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [4] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [3] Iteration: 4300 / 7000 [ 61%]  (Sampling)
Chain [1] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [2] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [4] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [3] Iteration: 4400 / 7000 [ 62%]  (Sampling)
Chain [1] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [4] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [2] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [3] Iteration: 4500 / 7000 [ 64%]  (Sampling)
Chain [1] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [4] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [2] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [3] Iteration: 4600 / 7000 [ 65%]  (Sampling)
Chain [4] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [1] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [2] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [4] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [3] Iteration: 4700 / 7000 [ 67%]  (Sampling)
Chain [1] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [2] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [4] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [3] Iteration: 4800 / 7000 [ 68%]  (Sampling)
Chain [1] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [4] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [2] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [3] Iteration: 4900 / 7000 [ 70%]  (Sampling)
Chain [1] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [4] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [2] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [3] Iteration: 5000 / 7000 [ 71%]  (Sampling)
Chain [4] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [1] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [4] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [2] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [3] Iteration: 5100 / 7000 [ 72%]  (Sampling)
Chain [1] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [4] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [2] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [3] Iteration: 5200 / 7000 [ 74%]  (Sampling)
Chain [1] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [4] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [3] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [2] Iteration: 5300 / 7000 [ 75%]  (Sampling)
Chain [4] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [3] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [2] Iteration: 5400 / 7000 [ 77%]  (Sampling)
Chain [4] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [1] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [3] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [4] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [2] Iteration: 5500 / 7000 [ 78%]  (Sampling)
Chain [1] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [4] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [2] Iteration: 5600 / 7000 [ 80%]  (Sampling)
Chain [1] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [4] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [3] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [2] Iteration: 5700 / 7000 [ 81%]  (Sampling)
Chain [4] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [4] 
Chain [4] Elapsed Time: 3194.4 seconds (Warm-up)
Chain [4] 2960.33 seconds (Sampling)
Chain [4] 6154.74 seconds (Total)
Chain [4] 
Chain [4] 
Chain [1] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [3] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [2] Iteration: 5800 / 7000 [ 82%]  (Sampling)
Chain [1] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [3] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [2] Iteration: 5900 / 7000 [ 84%]  (Sampling)
Chain [1] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [3] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [2] Iteration: 6000 / 7000 [ 85%]  (Sampling)
Chain [1] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [3] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [1] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [2] Iteration: 6100 / 7000 [ 87%]  (Sampling)
Chain [3] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [1] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [2] Iteration: 6200 / 7000 [ 88%]  (Sampling)
Chain [3] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [1] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [2] Iteration: 6300 / 7000 [ 90%]  (Sampling)
Chain [3] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [1] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [2] Iteration: 6400 / 7000 [ 91%]  (Sampling)
Chain [3] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [2] Iteration: 6500 / 7000 [ 92%]  (Sampling)
Chain [1] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [2] Iteration: 6600 / 7000 [ 94%]  (Sampling)
Chain [3] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [1] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [2] Iteration: 6700 / 7000 [ 95%]  (Sampling)
Chain [3] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [1] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [2] Iteration: 6800 / 7000 [ 97%]  (Sampling)
Chain [3] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [2] Iteration: 6900 / 7000 [ 98%]  (Sampling)
Chain [1] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [1] 
Chain [1] Elapsed Time: 3727.69 seconds (Warm-up)
Chain [1] 3622.63 seconds (Sampling)
Chain [1] 7350.32 seconds (Total)
Chain [1] 
Chain [1] 
Chain [3] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [3] 
Chain [3] Elapsed Time: 3847.67 seconds (Warm-up)
Chain [3] 3517.91 seconds (Sampling)
Chain [3] 7365.58 seconds (Total)
Chain [3] 
Chain [3] 
Chain [2] Iteration: 7000 / 7000 [100%]  (Sampling)
Chain [2] 
Chain [2] Elapsed Time: 3731.25 seconds (Warm-up)
Chain [2] 3707.06 seconds (Sampling)
Chain [2] 7438.31 seconds (Total)
Chain [2] 
Chain [2] 
***hmc diagnostics:
Processing csv files: /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_1.csv, /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_2.csv, /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_3.csv, /tmp/tmpsv9hfkco/RDM_hier_3d-20220812155618_4.csv

Checking sampler transitions treedepth.
Treedepth satisfactory for all transitions.

Checking sampler transitions for divergences.
No divergent transitions found.

Checking E-BFMI - sampler transitions HMC potential energy.
E-BFMI satisfactory.

Effective sample size satisfactory.

Split R-hat values satisfactory all parameters.

Processing complete, no problems detected.

***DF: 
                        Mean     MCSE  StdDev  ...    N_Eff  N_Eff/s  R_hat
name                                           ...                         
lp__                 -490.00  0.33000  17.000  ...   2700.0     0.19    1.0
mu_ndt                 -0.10  0.00057   0.052  ...   8500.0     0.62    1.0
mu_threshold_word       1.10  0.00069   0.061  ...   7800.0     0.56    1.0
mu_threshold_nonword    1.60  0.00087   0.070  ...   6500.0     0.47    1.0
mu_drift_word[1]        3.90  0.00360   0.220  ...   3686.0     0.27    1.0
...                      ...      ...     ...  ...      ...      ...    ...
log_lik[10703]          0.17  0.00077   0.096  ...  15661.0     1.10    1.0
log_lik[10704]          0.18  0.00038   0.050  ...  17812.0     1.30    1.0
log_lik[10705]         -3.60  0.00200   0.240  ...  15240.0     1.10    1.0
log_lik[10706]         -1.70  0.00220   0.270  ...  15638.0     1.10    1.0
log_lik[10707]         -2.20  0.00160   0.190  ...  14901.0     1.10    1.0

[64810 rows x 9 columns]
***Rhat > 1.01: 
0
Empty DataFrame
Columns: [Mean, MCSE, StdDev, 5%, 50%, 95%, N_Eff, N_Eff/s, R_hat]
Index: []
       Mean  MCSE  StdDev   5%  50%  95%  N_Eff  N_Eff/s  R_hat
count   0.0   0.0     0.0  0.0  0.0  0.0    0.0      0.0    0.0
mean    NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
std     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
min     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
25%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
50%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
75%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
max     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
HF words, word drift mean and std:
3.9899808319737278 0.058500697140552164
HF words, nonword drift mean and std:
1.0448794655655367 0.10078477215181965
LF words word drift mean and std:
2.7541854561132766 0.05154349775794321
LF words nonword drift mean and std:
1.617646540599625 0.06119718392659152
NW words word drift mean and std:
0.5512602117522332 0.05290638619685125
NW words nonword drift mean and std:
3.280453447648631 0.04421758811082888
HF words, word threshold mean and std:
1.4037039899089983 0.02871164993778223
HF words, nonword threshold mean and std:
1.7518318473970447 0.030680774673341776
LF words word threshold mean and std:
1.4000815726005524 0.02878416947371905
LF words nonword threshold mean and std:
1.7495814596785968 0.030762689308828844
NW words word threshold mean and std:
1.405856440767001 0.02871246688450186
NW words nonword threshold mean and std:
1.7484642760075504 0.03062242713693099
HF words ndt_t mean and std:
0.30661788083523817 0.004761516192441984
LF words ndt_t mean and std:
0.3056164409927761 0.004746929094871462
Non Words ndt_t mean and std:
0.3076171673624556 0.004817615171116097
{'lppd': -222.18786364027375, 'p_waic': 234.77900510389503, 'waic': 913.9337374883376, 'waic_se': 252.65482344850548}
INFO:cmdstanpy:deleting tmpfiles dir: /tmp/tmpsv9hfkco
INFO:cmdstanpy:done
